{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leehen/Documents/code-test-list-sort/src/StatusWrapper/index.tsx\";\nimport * as React from \"react\";\nimport { LoadingStatusT } from './type';\n\nconst StatusWrapper = ({\n  status,\n  children,\n  message\n}) => {\n  switch (status) {\n    case LoadingStatusT.loading:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n\n    case LoadingStatusT.success:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: children\n      }, void 0, false);\n\n    case LoadingStatusT.failed:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n\n    case LoadingStatusT.idle:\n      return null;\n  }\n};\n\n_c = StatusWrapper;\nexport default StatusWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusWrapper\");","map":{"version":3,"sources":["/Users/leehen/Documents/code-test-list-sort/src/StatusWrapper/index.tsx"],"names":["React","LoadingStatusT","StatusWrapper","status","children","message","loading","success","failed","idle"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,cAAR,QAA6B,QAA7B;;AAOA,MAAMC,aAA8B,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AACxE,UAAQF,MAAR;AACE,SAAKF,cAAc,CAACK,OAApB;AACE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAKL,cAAc,CAACM,OAApB;AACE,0BAAO;AAAA,kBAAGH;AAAH,uBAAP;;AACF,SAAKH,cAAc,CAACO,MAApB;AACE,0BAAO;AAAA,kBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAKJ,cAAc,CAACQ,IAApB;AACE,aAAO,IAAP;AARJ;AAUD,CAXD;;KAAMP,a;AAaN,eAAeA,aAAf","sourcesContent":["import * as React from \"react\";\nimport {LoadingStatusT} from './type';\n\ntype Props = {\n  status: LoadingStatusT;\n  message: string,\n};\n\nconst StatusWrapper: React.FC<Props> = ({ status, children, message }) => {\n  switch (status) {\n    case LoadingStatusT.loading:\n      return <div>loading.....</div>;\n    case LoadingStatusT.success:\n      return <>{children}</>;\n    case LoadingStatusT.failed:\n      return <div>{message}</div>;\n    case LoadingStatusT.idle:\n      return null;\n  }\n};\n\nexport default StatusWrapper;\n"]},"metadata":{},"sourceType":"module"}